980 · 基础计算器 II
描述
实现一个基础计算器来计算一个简单表达式字符串。

这个表达式字符串只包含 非负 整数，运算符 +, -, *, / 以及空格 。 整数除法应该舍去小数。

你可以假设给出的表达式总是合理的。

请 不要 使用内置的计算表达式字符串的函数

样例
例1:

输入:
"3+2*2"
输出:
7

参考575的思路，不同的是575的字母不需要相加减的关系。
class Solution:
    """
    @param s: the given expression
    @return: the result of expression
    """
    def calculate(self, s):
        #isdigit or not
        # * or / return pre number
        # +/- append next +-num
        # write your code here
        if not s:
            return '0'

        stack = []
        num = 0
        sign = "+"

        for ch in range(len(s)):
            if s[ch].isdigit():
                num = num*10 + int(s[ch])
            
            if (not s[ch].isdigit() and not s[ch].isspace()) or ch == len(s)-1:
                if sign == '+':
                    stack.append(num)
                elif sign == '-':
                    stack.append(-num)
                elif sign == '*':
                    stack.append(stack.pop() * num)
                else:
                    tmp = stack.pop()
                    if tmp // num < 0 and tmp % num !=0:
                        stack.append(tmp//num + 1)
                    else:
                        stack.append(tmp // num)
                sign = s[ch]
                num = 0

        return sum(stack)
