https://www.lintcode.com/problem/1540/description
1540 · 能否转换
描述 给两个字符串 S 和 T, 判断 S 能不能通过删除一些字母(包括0个)变成 T.

输入: S = "lintcode" 和 T = "lint"
输出: true

错误想法：
  先考虑S和T None的情况和长度为0的情况；
  S,T变成两个list，每循环到listT里的一个元素就剪掉listS里相同的一个元素，
  再判断剩下的listS的长度是不是listS-listT的长度差。
漏洞：
  没有考虑到题目要求仅为“删除”后就一致，而题目被我曲解成查T中所有元素是不是都在S里。
  
class Solution:
    """
    @param s: string S
    @param t: string T
    @return: whether S can convert to T
    """
    def canConvert(self, s, t):
        if s is None or len(s) == 0:
            return False
        if t is None or len(t) == 0:
            return True 

        s = (list(s))
        t = (list(t))
        lend = len(s) - len(t)
    # print(lend)
        for i in t:
            if i in s:
                s.remove(i)
    # print(s)
        if len(s) == lend:
            return True
        else:
            return False
            
正确解法：
  先考虑S和T None的情况和长度为0的情况；
  设置一个int：indexT，用range建立长度为S的整数列表，再用for遍历
  判断当前位置的listS中的字符是否和ListT中的元素相同，相同的话，ListT移到下一位(就是indexT+1)，并判断当前indexT的大小是不是(T)
  的长度，不是的话就继续下一位。如果for循环结束，indexT的大小都不等于(T)的长度的话，那就return False
 
❤❤❤️❤️❤️❤❤️❤️❤️❤❤️❤️❤️❤❤️❤️❤️❤❤️❤️❤️❤❤️❤️❤️* 
point: >for loop+range 确保了遍历S和T的顺序，遍历S，确保遍历了所有字符（如果S最后一位和T最后一位相等）；
       >每次循环判断大小和长度为了避免出现T遍历完了但S没结束的error
       >str(字符串可以计算长度)
         

class Solution:
    """
    @param s: string S
    @param t: string T
    @return: whether S can convert to T
    """
    def canConvert(self, s, t):
        if s is None or len(s) == 0:
            return False
        if t is None or len(t) == 0:
            return True 

        indexT = 0
        for indexS in range(len(s)):
            if s[indexS] == t[indexT]:
                indexT += 1
                if indexT == len(t):
                    return True
        return False
        
***************************************************************************************************
936 · 首字母大写
  
描述
输入一个英文句子，将每个单词的第一个字母改成大写字母

这个句子可能并不是一个符合语法规则的句子。
句子长度小于等于100。
样例
样例1

输入: s =  "i want to get an accepted"
输出: "I Want To Get An Accepted"
样例2

输入: s =  "i jidls    mdijf  i  lsidj  i p l   "
输出: "I Jidls    Mdijf  I  Lsidj  I P L   "

❤❤️❤️❤️❤❤️❤️❤️❤❤️❤️❤️❤❤️❤️❤️❤❤️❤️❤️❤❤️❤️❤️*
point:>大小写转换:chr(ord(s1[i]) - 32)
      >python 判断整个字符串是不是字母，就用is.alpha(),判断整个字符串里单个字符就用ascii码
      >字符串（string）可以判断长度，但string是一种不可变的数据类型。list可以。
    
    
class Solution:
    """
    @param s: a string
    @return: a string after capitalizes the first letter
    """
    def capitalizesFirst(self, s):
        # Write your code here
        n = len(s)
        s1 = list(s)
        if s1[0] >= 'a' and s1[0] <= 'z':
            s1[0] = chr(ord(s1[0]) - 32)
        for i in range(1, n):
            if s1[i - 1] == ' ' and s1[i] != ' ':
                s1[i] = chr(ord(s1[i]) - 32)
        return ''.join(s1)
